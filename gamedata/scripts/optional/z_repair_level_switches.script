name = "Repair X16/X19 Switches"
description = "This function reattaches the switch scheme if necessary. You must be on the X16 level or the X19 level."
author = "NatVac"
revision = "1.0"
number_of_parameters = 0

function main()
	local switch_group
	if level.name() == "l08u_brainlab" then
		switch_group = "lab_primary_switcher"
	elseif level.name() == "l10u_bunker" then
		switch_group = "bun_primary_switcher"
	else
		return false, "You must be in X16 or X19."
	end
	local switch = nil
	local sim = alife()
	local found, fixed = 0,0
	for idb_ = 0, 65534, 1 do
		local lobj = sim:object(idb_)
		if lobj ~= nil then
			if lobj:section_name() == "physic_destroyable_object" and
					string.find(lobj:name(),switch_group,1,true) ~= nil then
				switch = level.object_by_id(lobj.id)
				found = found + 1
				local switch_storage = db.storage[switch:id()]
				if not switch_storage then return false, "Unfixable: No storage for switch "..lobj:name() end
				if switch_storage["ph_button"] == nil then -- scheme is detached
					xr_logic.initialize_obj(switch, switch_storage, false, db.actor, modules.stype_item)
					dbglog("Attempt made to fix switch '"..switch:name().."'")
					fixed = fixed + 1
				else
					dbglog("Switch '"..switch:name().."' already has a scheme attached")
				end
			end
		end
	end
	if fixed == 0 and found > 0 then
		_z.show_small_msg(found.." switch(es) found already in working order")
	else
		_z.show_small_msg(found.." switch(es) found, "..fixed.." switch(es) fixed.")
	end
end

